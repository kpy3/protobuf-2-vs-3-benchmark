// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message/v3/message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message/v3/message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf_v3_benchmark {

namespace {

const ::google::protobuf::Descriptor* Record_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Record_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2fv3_2fmessage_2eproto() {
  protobuf_AddDesc_message_2fv3_2fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message/v3/message.proto");
  GOOGLE_CHECK(file != NULL);
  Record_descriptor_ = file->message_type(0);
  static const int Record_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Record, i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Record, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Record, small_i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Record, d1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Record, d2_),
  };
  Record_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Record_descriptor_,
      Record::default_instance_,
      Record_offsets_,
      -1,
      -1,
      -1,
      sizeof(Record),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Record, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Record, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2fv3_2fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Record_descriptor_, &Record::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2fv3_2fmessage_2eproto() {
  delete Record::default_instance_;
  delete Record_reflection_;
}

void protobuf_AddDesc_message_2fv3_2fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030message/v3/message.proto\022\025protobuf_v3_"
    "benchmark\"G\n\006Record\022\t\n\001i\030\001 \003(\003\022\t\n\001s\030\002 \003("
    "\t\022\017\n\007small_i\030\003 \003(\005\022\n\n\002d1\030\004 \003(\001\022\n\n\002d2\030\005 \003"
    "(\001B\003\370\001\001b\006proto3", 135);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message/v3/message.proto", &protobuf_RegisterTypes);
  Record::default_instance_ = new Record();
  Record::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2fv3_2fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2fv3_2fmessage_2eproto {
  StaticDescriptorInitializer_message_2fv3_2fmessage_2eproto() {
    protobuf_AddDesc_message_2fv3_2fmessage_2eproto();
  }
} static_descriptor_initializer_message_2fv3_2fmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Record::kIFieldNumber;
const int Record::kSFieldNumber;
const int Record::kSmallIFieldNumber;
const int Record::kD1FieldNumber;
const int Record::kD2FieldNumber;
#endif  // !_MSC_VER

Record::Record()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_v3_benchmark.Record)
}

Record::Record(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  i_(arena),
  s_(arena),
  small_i_(arena),
  d1_(arena),
  d2_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_v3_benchmark.Record)
}

void Record::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Record::Record(const Record& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_v3_benchmark.Record)
}

void Record::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

Record::~Record() {
  // @@protoc_insertion_point(destructor:protobuf_v3_benchmark.Record)
  SharedDtor();
}

void Record::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
  }
}

void Record::ArenaDtor(void* object) {
  Record* _this = reinterpret_cast< Record* >(object);
  (void)_this;
}
void Record::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Record::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Record::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Record_descriptor_;
}

const Record& Record::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2fv3_2fmessage_2eproto();
  return *default_instance_;
}

Record* Record::default_instance_ = NULL;

Record* Record::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Record>(arena);
}

void Record::Clear() {
  i_.Clear();
  s_.Clear();
  small_i_.Clear();
  d1_.Clear();
  d2_.Clear();
}

bool Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_v3_benchmark.Record)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 i = 1;
      case 1: {
        if (tag == 8) {
         parse_i:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_i())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_i())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_i;
        if (input->ExpectTag(18)) goto parse_s;
        break;
      }

      // repeated string s = 2;
      case 2: {
        if (tag == 18) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_s()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->s(this->s_size() - 1).data(),
            this->s(this->s_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf_v3_benchmark.Record.s");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_s;
        if (input->ExpectTag(24)) goto parse_small_i;
        break;
      }

      // repeated int32 small_i = 3;
      case 3: {
        if (tag == 24) {
         parse_small_i:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_small_i())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_small_i())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_small_i;
        if (input->ExpectTag(33)) goto parse_d1;
        break;
      }

      // repeated double d1 = 4;
      case 4: {
        if (tag == 33) {
         parse_d1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33, input, this->mutable_d1())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_d1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_d1;
        if (input->ExpectTag(41)) goto parse_d2;
        break;
      }

      // repeated double d2 = 5;
      case 5: {
        if (tag == 41) {
         parse_d2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_d2())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_d2())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_d2;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_v3_benchmark.Record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_v3_benchmark.Record)
  return false;
#undef DO_
}

void Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_v3_benchmark.Record)
  // repeated int64 i = 1;
  for (int i = 0; i < this->i_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->i(i), output);
  }

  // repeated string s = 2;
  for (int i = 0; i < this->s_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->s(i).data(), this->s(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "protobuf_v3_benchmark.Record.s");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->s(i), output);
  }

  // repeated int32 small_i = 3;
  for (int i = 0; i < this->small_i_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->small_i(i), output);
  }

  // repeated double d1 = 4;
  for (int i = 0; i < this->d1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->d1(i), output);
  }

  // repeated double d2 = 5;
  for (int i = 0; i < this->d2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->d2(i), output);
  }

  // @@protoc_insertion_point(serialize_end:protobuf_v3_benchmark.Record)
}

::google::protobuf::uint8* Record::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_v3_benchmark.Record)
  // repeated int64 i = 1;
  for (int i = 0; i < this->i_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->i(i), target);
  }

  // repeated string s = 2;
  for (int i = 0; i < this->s_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->s(i).data(), this->s(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf_v3_benchmark.Record.s");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->s(i), target);
  }

  // repeated int32 small_i = 3;
  for (int i = 0; i < this->small_i_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->small_i(i), target);
  }

  // repeated double d1 = 4;
  for (int i = 0; i < this->d1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(4, this->d1(i), target);
  }

  // repeated double d2 = 5;
  for (int i = 0; i < this->d2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->d2(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protobuf_v3_benchmark.Record)
  return target;
}

int Record::ByteSize() const {
  int total_size = 0;

  // repeated int64 i = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->i_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->i(i));
    }
    total_size += 1 * this->i_size() + data_size;
  }

  // repeated string s = 2;
  total_size += 1 * this->s_size();
  for (int i = 0; i < this->s_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->s(i));
  }

  // repeated int32 small_i = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->small_i_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->small_i(i));
    }
    total_size += 1 * this->small_i_size() + data_size;
  }

  // repeated double d1 = 4;
  {
    int data_size = 0;
    data_size = 8 * this->d1_size();
    total_size += 1 * this->d1_size() + data_size;
  }

  // repeated double d2 = 5;
  {
    int data_size = 0;
    data_size = 8 * this->d2_size();
    total_size += 1 * this->d2_size() + data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Record::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Record* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Record*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Record::MergeFrom(const Record& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  i_.MergeFrom(from.i_);
  s_.MergeFrom(from.s_);
  small_i_.MergeFrom(from.small_i_);
  d1_.MergeFrom(from.d1_);
  d2_.MergeFrom(from.d2_);
}

void Record::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Record::CopyFrom(const Record& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Record::IsInitialized() const {

  return true;
}

void Record::Swap(Record* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Record temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Record::UnsafeArenaSwap(Record* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Record::InternalSwap(Record* other) {
  i_.UnsafeArenaSwap(&other->i_);
  s_.UnsafeArenaSwap(&other->s_);
  small_i_.UnsafeArenaSwap(&other->small_i_);
  d1_.UnsafeArenaSwap(&other->d1_);
  d2_.UnsafeArenaSwap(&other->d2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Record_descriptor_;
  metadata.reflection = Record_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_v3_benchmark

// @@protoc_insertion_point(global_scope)
