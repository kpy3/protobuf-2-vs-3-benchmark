// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message/v2/message.proto

#ifndef PROTOBUF_message_2fv2_2fmessage_2eproto__INCLUDED
#define PROTOBUF_message_2fv2_2fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_v2_benchmark {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_message_2fv2_2fmessage_2eproto();
void protobuf_AssignDesc_message_2fv2_2fmessage_2eproto();
void protobuf_ShutdownFile_message_2fv2_2fmessage_2eproto();

class Record;

// ===================================================================

class Record : public ::google::protobuf::Message {
 public:
  Record();
  virtual ~Record();

  Record(const Record& from);

  inline Record& operator=(const Record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Record& default_instance();

  void Swap(Record* other);

  // implements Message ----------------------------------------------

  Record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Record& from);
  void MergeFrom(const Record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 i = 1;
  inline int i_size() const;
  inline void clear_i();
  static const int kIFieldNumber = 1;
  inline ::google::protobuf::int64 i(int index) const;
  inline void set_i(int index, ::google::protobuf::int64 value);
  inline void add_i(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      i() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_i();

  // repeated string s = 2;
  inline int s_size() const;
  inline void clear_s();
  static const int kSFieldNumber = 2;
  inline const ::std::string& s(int index) const;
  inline ::std::string* mutable_s(int index);
  inline void set_s(int index, const ::std::string& value);
  inline void set_s(int index, const char* value);
  inline void set_s(int index, const char* value, size_t size);
  inline ::std::string* add_s();
  inline void add_s(const ::std::string& value);
  inline void add_s(const char* value);
  inline void add_s(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& s() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_s();

  // repeated int32 small_i = 3;
  inline int small_i_size() const;
  inline void clear_small_i();
  static const int kSmallIFieldNumber = 3;
  inline ::google::protobuf::int32 small_i(int index) const;
  inline void set_small_i(int index, ::google::protobuf::int32 value);
  inline void add_small_i(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      small_i() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_small_i();

  // repeated double d1 = 4;
  inline int d1_size() const;
  inline void clear_d1();
  static const int kD1FieldNumber = 4;
  inline double d1(int index) const;
  inline void set_d1(int index, double value);
  inline void add_d1(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      d1() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_d1();

  // repeated double d2 = 5;
  inline int d2_size() const;
  inline void clear_d2();
  static const int kD2FieldNumber = 5;
  inline double d2(int index) const;
  inline void set_d2(int index, double value);
  inline void add_d2(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      d2() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_d2();

  // @@protoc_insertion_point(class_scope:protobuf_v2_benchmark.Record)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > i_;
  ::google::protobuf::RepeatedPtrField< ::std::string> s_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > small_i_;
  ::google::protobuf::RepeatedField< double > d1_;
  ::google::protobuf::RepeatedField< double > d2_;
  friend void  protobuf_AddDesc_message_2fv2_2fmessage_2eproto();
  friend void protobuf_AssignDesc_message_2fv2_2fmessage_2eproto();
  friend void protobuf_ShutdownFile_message_2fv2_2fmessage_2eproto();

  void InitAsDefaultInstance();
  static Record* default_instance_;
};
// ===================================================================


// ===================================================================

// Record

// repeated int64 i = 1;
inline int Record::i_size() const {
  return i_.size();
}
inline void Record::clear_i() {
  i_.Clear();
}
inline ::google::protobuf::int64 Record::i(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_v2_benchmark.Record.i)
  return i_.Get(index);
}
inline void Record::set_i(int index, ::google::protobuf::int64 value) {
  i_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_v2_benchmark.Record.i)
}
inline void Record::add_i(::google::protobuf::int64 value) {
  i_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_v2_benchmark.Record.i)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Record::i() const {
  // @@protoc_insertion_point(field_list:protobuf_v2_benchmark.Record.i)
  return i_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Record::mutable_i() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_v2_benchmark.Record.i)
  return &i_;
}

// repeated string s = 2;
inline int Record::s_size() const {
  return s_.size();
}
inline void Record::clear_s() {
  s_.Clear();
}
inline const ::std::string& Record::s(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_v2_benchmark.Record.s)
  return s_.Get(index);
}
inline ::std::string* Record::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_v2_benchmark.Record.s)
  return s_.Mutable(index);
}
inline void Record::set_s(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protobuf_v2_benchmark.Record.s)
  s_.Mutable(index)->assign(value);
}
inline void Record::set_s(int index, const char* value) {
  s_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_v2_benchmark.Record.s)
}
inline void Record::set_s(int index, const char* value, size_t size) {
  s_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_v2_benchmark.Record.s)
}
inline ::std::string* Record::add_s() {
  return s_.Add();
}
inline void Record::add_s(const ::std::string& value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_v2_benchmark.Record.s)
}
inline void Record::add_s(const char* value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_v2_benchmark.Record.s)
}
inline void Record::add_s(const char* value, size_t size) {
  s_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_v2_benchmark.Record.s)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Record::s() const {
  // @@protoc_insertion_point(field_list:protobuf_v2_benchmark.Record.s)
  return s_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Record::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_v2_benchmark.Record.s)
  return &s_;
}

// repeated int32 small_i = 3;
inline int Record::small_i_size() const {
  return small_i_.size();
}
inline void Record::clear_small_i() {
  small_i_.Clear();
}
inline ::google::protobuf::int32 Record::small_i(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_v2_benchmark.Record.small_i)
  return small_i_.Get(index);
}
inline void Record::set_small_i(int index, ::google::protobuf::int32 value) {
  small_i_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_v2_benchmark.Record.small_i)
}
inline void Record::add_small_i(::google::protobuf::int32 value) {
  small_i_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_v2_benchmark.Record.small_i)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Record::small_i() const {
  // @@protoc_insertion_point(field_list:protobuf_v2_benchmark.Record.small_i)
  return small_i_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Record::mutable_small_i() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_v2_benchmark.Record.small_i)
  return &small_i_;
}

// repeated double d1 = 4;
inline int Record::d1_size() const {
  return d1_.size();
}
inline void Record::clear_d1() {
  d1_.Clear();
}
inline double Record::d1(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_v2_benchmark.Record.d1)
  return d1_.Get(index);
}
inline void Record::set_d1(int index, double value) {
  d1_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_v2_benchmark.Record.d1)
}
inline void Record::add_d1(double value) {
  d1_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_v2_benchmark.Record.d1)
}
inline const ::google::protobuf::RepeatedField< double >&
Record::d1() const {
  // @@protoc_insertion_point(field_list:protobuf_v2_benchmark.Record.d1)
  return d1_;
}
inline ::google::protobuf::RepeatedField< double >*
Record::mutable_d1() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_v2_benchmark.Record.d1)
  return &d1_;
}

// repeated double d2 = 5;
inline int Record::d2_size() const {
  return d2_.size();
}
inline void Record::clear_d2() {
  d2_.Clear();
}
inline double Record::d2(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_v2_benchmark.Record.d2)
  return d2_.Get(index);
}
inline void Record::set_d2(int index, double value) {
  d2_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_v2_benchmark.Record.d2)
}
inline void Record::add_d2(double value) {
  d2_.Add(value);
  // @@protoc_insertion_point(field_add:protobuf_v2_benchmark.Record.d2)
}
inline const ::google::protobuf::RepeatedField< double >&
Record::d2() const {
  // @@protoc_insertion_point(field_list:protobuf_v2_benchmark.Record.d2)
  return d2_;
}
inline ::google::protobuf::RepeatedField< double >*
Record::mutable_d2() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_v2_benchmark.Record.d2)
  return &d2_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_v2_benchmark

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2fv2_2fmessage_2eproto__INCLUDED
